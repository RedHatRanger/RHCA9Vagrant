---
# 01_prepare_nodes.yml
- name: Prepare all nodes for AAP
  hosts: all
  become: true
  vars:
    ansible_user: rhel
    common_packages:
      - python3
      - python3-pip
      - git
      - vim
      - wget
      - curl
      - sudo
      - podman
      - firewalld
    fw_services:
      - http
      - https
      - ssh
      - postgresql
    hosts_entries:
      - ip: "192.168.1.201"
        name: "controller.lab.example.com"
      - ip: "192.168.1.211"
        name: "node1.lab.example.com"
      - ip: "192.168.1.212"
        name: "node2.lab.example.com"
  tasks:
    - name: Install common packages
      yum:
        name: "{{ common_packages }}"
        state: present

    - name: Ensure firewalld is running
      service:
        name: firewalld
        state: started
        enabled: true

    - name: Open required services in firewalld
      firewalld:
        service: "{{ fw_services }}"
        permanent: true
        state: enabled
      notify: reload firewalld

    - name: Add entries to /etc/hosts
      lineinfile:
        path: /etc/hosts
        create: yes
        line: "{{ item.ip }} {{ item.name }}"
      loop: "{{ hosts_entries }}"

    - name: Ensure the rhel user exists
      user:
        name: "{{ ansible_user }}"
        shell: /bin/bash
        groups: wheel
        append: true
        password: "{{ 'redhat' | password_hash('sha512') }}"

    - name: Allow rhel user passwordless sudo
      lineinfile:
        path: /etc/sudoers.d/99_rhel
        create: yes
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"
        validate: 'visudo -cf %s'

- name: Configure SSH key auth from controller
  hosts: controller.lab.example.com
  become: true
  vars:
    ansible_user: rhel
  tasks:
    - name: Generate key-pair (if absent)
      openssh_keypair:
        path: /home/{{ ansible_user }}/.ssh/id_rsa
        type: rsa
        size: 2048
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
      register: keypair
      changed_when: keypair.changed

    - name: Fetch public key
      slurp:
        src: /home/{{ ansible_user }}/.ssh/id_rsa.pub
      register: pubkey

- name: Distribute controller public key to all nodes
  hosts: all:!controller.lab.example.com
  become: true
  vars:
    ansible_user: rhel
    ssh_pub: "{{ pubkey.content | b64decode }}"
  tasks:
    - name: Ensure .ssh directory exists
      file:
        path: /home/{{ ansible_user }}/.ssh
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0700'

    - name: Install controllerâ€™s public key
      copy:
        dest: /home/{{ ansible_user }}/.ssh/authorized_keys
        content: "{{ ssh_pub }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

  handlers:
    - name: reload firewalld
      firewalld:
        state: reloaded
