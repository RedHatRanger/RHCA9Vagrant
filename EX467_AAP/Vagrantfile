# Vagrantfile for a minimal, lab/testing setup of AAP 2.4 (offline bundle)
# Hostnames and IP addresses (with /24 CIDR):
#   controller.example.com  -> 172.28.128.100 (Automation Controller)
#   node1.example.com       -> 172.28.128.101 (Managed Host)
#   db.example.com          -> 172.28.128.102 (PostgreSQL DB)
#   hub.example.com         -> 172.28.128.103 (Automation Hub)
#
# Note: Resource allocations below are the minimum for learning purposes.
# The passwords "redhat" are used for exam practice only.
# In production, use more secure passwords.
#
# Since DNS is not available, we update /etc/hosts on each VM with static entries.

Vagrant.configure("2") do |config|
  config.vm.box = "generic/rhel9"
  
  # Disable the default synced folder if not needed.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Define the common /etc/hosts entries.
  hosts_entries = <<-EOF
172.28.128.100 controller.example.com
172.28.128.101 node1.example.com
172.28.128.102 db.example.com
172.28.128.103 hub.example.com
EOF

  # Define a common provisioning script to set passwords and update /etc/hosts.
  common_provision = <<-SHELL
    # Set passwords for rhel and root (for exam practice only; use secure passwords in production)
    echo 'rhel:redhat' | sudo chpasswd
    echo 'root:redhat' | sudo chpasswd

    # Append static host entries to /etc/hosts for local name resolution
    cat <<EOF | sudo tee -a /etc/hosts
#{hosts_entries}
EOF
  SHELL

  # Automation Controller VM
  config.vm.define "controller" do |controller|
    controller.vm.hostname = "controller.example.com"
    controller.vm.network "private_network", ip: "172.28.128.100", netmask: "255.255.255.0"
    controller.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"  # 4GB RAM (minimum for learning)
      vb.cpus   = 2       # 2 vCPUs (minimum for learning)
    end
    controller.vm.provision "shell", inline: common_provision
  end

  # Managed Host VM (node1.example.com)
  config.vm.define "node1" do |node1|
    node1.vm.hostname = "node1.example.com"
    node1.vm.network "private_network", ip: "172.28.128.101", netmask: "255.255.255.0"
    node1.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"  # 1GB RAM (minimum for learning)
      vb.cpus   = 1       # 1 vCPU (minimum for learning)
    end
    node1.vm.provision "shell", inline: common_provision
  end

  # PostgreSQL DB VM
  config.vm.define "db" do |db|
    db.vm.hostname = "db.example.com"
    db.vm.network "private_network", ip: "172.28.128.102", netmask: "255.255.255.0"
    db.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"  # 2GB RAM (minimum for learning)
      vb.cpus   = 1       # 1 vCPU (minimum for learning)
    end
    db.vm.provision "shell", inline: common_provision
  end

  # Automation Hub VM
  config.vm.define "hub" do |hub|
    hub.vm.hostname = "hub.example.com"
    hub.vm.network "private_network", ip: "172.28.128.103", netmask: "255.255.255.0"
    hub.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"  # 2GB RAM (minimum for learning)
      vb.cpus   = 1       # 1 vCPU (minimum for learning)
    end
    hub.vm.provision "shell", inline: common_provision
  end
end
