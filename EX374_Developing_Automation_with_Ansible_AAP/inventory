# Ansible Automation Platform 2.4 Inventory File
# Single Node Setup (All-in-One) - Controller, PAH, and PostgreSQL

# Define the automation controller node
[automationcontroller]
localhost ansible_connection=local

# Define the automation hub node (Platform Administration Hub - PAH)
[automationhub]
localhost ansible_connection=local

# Define the database (using the same node)
[database]
localhost ansible_connection=local

# Variables for all hosts
[all:vars]
# Admin password for the automation controller
admin_password='<password>'

# PostgreSQL database configuration
pg_host='localhost'
pg_port=5432
pg_database='awx'
pg_username='awx'
pg_password='<password>'
pg_sslmode='prefer'  # set to 'verify-full' for client-side enforced SSL

# PostgreSQL additional configuration
# These settings help optimize PostgreSQL for a single-node deployment
pg_shared_buffers='1024MB'  # Recommended to be 25% of available RAM
pg_work_mem='32MB'          # Increase for complex queries
pg_maintenance_work_mem='256MB'
pg_max_connections=300      # Adjust based on expected concurrent connections
pg_max_parallel_workers=8   # Set to number of available CPU cores
pg_checkpoint_timeout=30    # In minutes
pg_checkpoint_completion_target=0.9

# Red Hat registry information
registry_url='registry.redhat.io'
registry_username='<registry username>'
registry_password='<registry password>'

# Automation Controller configuration
# Recommended memory allocation for controller services
# For a single node setup, these values should be adjusted based on total available memory
automation_controller_task_workers=5
automation_controller_task_impact_workers=3
automation_controller_control_plane_workers=2
automation_controller_execution_workers=2

# SSL Certificate settings (optional)
# Uncomment and set these if you have custom certificates
# web_server_ssl_cert=/path/to/tower.cert
# web_server_ssl_key=/path/to/tower.key
# custom_ca_cert=/path/to/ca.crt

# Automation Hub (PAH) configuration
automationhub_admin_password='<password>'
automationhub_api_token='<token>'  # Optional: Set this if you have an existing token
automationhub_require_content_approval=False  # Set to True if you want to require approval for content
automationhub_disable_https=False  # Keep HTTPS enabled for security
automationhub_enable_analytics=True  # Enable analytics for better support

# Configure container registry for automation hub
automationhub_container_signing_service='ansible-sign'
automationhub_container_registry_requires_auth=True

# Pulp settings for automation hub
pulp_default_admin_password='<password>'  # Usually same as automationhub_admin_password
pulp_install_plugins=['pulp-ansible', 'pulp-container']

# Automation Hub database configuration (using the same PostgreSQL instance)
automationhub_pg_host='localhost'
automationhub_pg_port=5432
automationhub_pg_database='automationhub'
automationhub_pg_username='automationhub'
automationhub_pg_password='<password>'
automationhub_pg_sslmode='prefer'

# Automation Hub SSL Certificate settings (optional)
# Uncomment and set these if you have custom certificates
# automationhub_ssl_cert=/path/to/automationhub.cert
# automationhub_ssl_key=/path/to/automationhub.key
# automationhub_ssl_validate_certs=True

# Disable Event Driven Ansible (as per requirement)
enable_eda=false

# Additional settings for single-node performance
# Receptor configuration
receptor_listener_port=27199

# Logging settings
logging_aggregator_enabled=false  # Set to true if using external logging system
logging_aggregator_level=INFO
logging_aggregator_max_disk_usage_gb=10

# System resource recommendations for this single-node setup:
# - vCPUs: 8 vCPUs minimum (12+ recommended for production)
# - RAM: 16 GB minimum (32+ GB recommended for production)
# - Storage: 60 GB minimum for the base system, plus:
#   - At least 20 GB for /var where PostgreSQL data is stored
#   - Additional storage depending on your automation needs (logs, projects, etc.)
